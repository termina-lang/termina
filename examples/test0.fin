enum Message {
    In (u32, u32),
    Out (u32),
    Stop,
    Reset
};

/* The following definition fails
task class CHousekeeping {
  message_pool : port Pool<Message; 10>;
  method run(&priv self) -> bool {
    var alloc_msg : Option<dyn Message> = None;
    self->message_pool.alloc(&mut alloc_msg);

    return true;
  }
};
*/

// The following one should work.
task class CHousekeeping {

  message_pool : port Pool<Message; 10>;
  ints : port Pool<u32; 10>;

  method add(&priv self) -> bool {
    var int : Option<dyn u32> = None;
    self->ints.alloc(&mut int);
    match int {
      case Some(i) => {
            var r : u32 = 0 : u32;
            r = r + i;
            free(i);
      }
      case None => {
      }
    }
    return true;
  }

  method run(&priv self) -> bool {
    var alloc_msg : Option<dyn Message> = None;
    self->message_pool.alloc(&mut alloc_msg);
    match alloc_msg {
        case Some(msg) => {
            free(msg);
        }
        case None => {
        }
    }
    return true;
  }
};
