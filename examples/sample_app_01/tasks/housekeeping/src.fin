import drivers.uart;

task class CHouseKeepingTask {

    pool_port : port Allocator<u32>;
    msg_queue_port : port MsgQueue<u32; 10>;

    count : u32;

    viewer is_count_zero(&self) -> bool {
        return self->count == 0 : u32;
    }

    method run(&mut self) -> TaskRet {

        var ret : TaskRet = TaskRet::Continue;
        var result : Result = Result::Ok;

        var next_time : TimeVal = { tv_sec = 10 : u32, tv_usec = 0 : u32 } : TimeVal;

        var msg : Option<box u32> = None;

        self->pool_port.alloc(&mut msg);

        match msg {

            case Some(data) => {

                data = 27 : u32;

                self->msg_queue_port.send(data, &mut result);

            }
            case None => {

            }

        }

        delay_in(&next_time);

        self->uart.init_drv();

        return ret;

    }

};
